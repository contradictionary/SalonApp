@using PagedList;
@using PagedList.Mvc;
@model IPagedList<sqlexpressmvc.Models.Stock>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Inventory";
    Layout = "~/Views/Shared/_Layout.cshtml";
    @Styles.Render("~/Content/datatablecss")
}

<h4>Inventory</h4>
@using (Html.BeginForm("Index", "Stocks", FormMethod.Get))
{<div class="panel panel-info">
        <div class="panel-body">
            <div>
                @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
                @Html.ActionLink("Open a Product", "Create", "UsedProducts", null, new { @class = "btn btn-info" })
                <div class="col-lg-3">
                    <div class="input-group">
                        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Search by Name..." })
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i> Search</button>
                        </span>
                    </div>
                </div>
            </div>

        </div>
    </div>
}

<table class="table-fill">
    <thead>
        <tr>           
            <th class="text-left">@Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })<span class="glyphicon glyphicon-sort"></span></th>
            <th class="text-left">Price</th>
            <th class="text-left">Quantity</th>
            <th class="text-left">Volume</th>
       
            <th class="text-left">Actions</th>
        </tr>
    </thead>
    <tbody class="table-hover">
        @foreach (var item in Model)
        {
            <tr onclick="location.href = '@(Url.Action("Details", "Stocks",new { id = item.StockID }))'">
                <td class="text-left">
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td class="text-left">
                    @Html.DisplayFor(modelItem => item.price)
                </td>
                <td class="text-left">
                    @Html.DisplayFor(modelItem => item.qty)
                </td>
                <td class="text-left">
                    @Html.DisplayFor(modelItem => item.volume)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.StockID }) |
                    @Html.ActionLink("AddPurchase", "AddPurchase", new { id = item.StockID })
                </td>
            </tr>
        }
    </tbody>
</table>
<br />

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))